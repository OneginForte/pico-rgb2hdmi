; Simple pio program to measure when the comparator flips against a ramp 

.program ramp_aquire
.define ramp_count 31
.wrap_target
    set x, ramp_count
ramp_loop:
    mov y, x
    mov pins, y
    jmp pin compare_high
    jmp x-- ramp_loop
compare_high:
    mov ISR, y
    push block
.wrap

 % c-sdk {
#include "hardware/clocks.h"
static inline void ramp_aquire_program_init(PIO pio, uint sm, uint offset, uint frequency, uint pin_base, uint compare_pin) {
    pio_sm_set_pins_with_mask(pio, sm, 0, 0x1fu << pin_base);
    pio_sm_set_pindirs_with_mask(pio, sm, ~0u, 0x1fu << pin_base);
    for (int i = 0; i < 5; ++i) {
        pio_gpio_init(pio, pin_base + i);
    }
    pio_gpio_init(pio, compare_pin);

    pio_sm_config c = ramp_aquire_program_get_default_config(offset);

    sm_config_set_out_pins(&c, pin_base, 5);
    float div = (float)clock_get_hz(clk_sys) / frequency;
    sm_config_set_clkdiv(&c, div);
    sm_config_set_jmp_pin(&c, compare_pin);
    sm_config_set_set_pins(&c, pin_base, 5);

    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}
%}